//定义扩展属性(给脚本用的脚本)
buildscript {
    //apply plugin: 'io.spring.dependency-management'
    repositories {
        mavenCentral()
        //maven { url "https://repo.spring.io/plugins-release" }
    }
    dependencies {
        //classpath("org.springframework.boot:spring-boot-gradle-plugin")
    }
}

plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'idea'
    id 'eclipse'
}
//全局版本控制
ext {
    aspectjVersion       = "1.8.14"
    freemarkerVersion    = "2.3.28"
    groovyVersion        = "2.4.17"
    hsqldbVersion        = "2.4.1"
    jackson2Version      = "2.9.9"
    jettyVersion         = "9.4.18.v20190429"
    junitJupiterVersion  = "5.0.3"
    junitPlatformVersion = "1.0.3"
    junitVintageVersion  = "4.12.3"
    kotlinVersion        = "1.2.71"
    log4jVersion         = "2.11.2"
    nettyVersion         = "4.1.36.Final"
    reactorVersion       = "Bismuth-SR17"
    rxjavaVersion        = "1.3.8"
    rxjavaAdapterVersion = "1.2.1"
    rxjava2Version       = "2.1.17"
    slf4jVersion         = "1.7.26"	  // spring-jcl + consistent 3rd party deps
    tiles3Version        = "3.0.8"
    tomcatVersion        = "8.5.42"
    undertowVersion      = "1.4.27.Final"

}
configure(allprojects) {
    //修改项目属性(可选)
    group 'com.cbx.gp'
    version '1.0-SNAPSHOT'

    //应用插件 plugin是plugins定义的id
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    // JVM 版本号要求
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'

    // 全局设置依赖配置
    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
        // 排除冲突包 支持通过group、module排除，可以同时使用
        all*.exclude group: 'commons-logging', module: 'commons-logging' // common-logging
        all*.exclude group: 'log4j', module: 'log4j' // log4j
        all*.exclude group: 'org.apache.logging.log4j', module: 'log4j-core' // slf4j -> log4j2
        all*.exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl' // log4j2
        all*.exclude group: 'org.slf4j', module: 'slf4j-jdk14' // slf4j -> jdk-logging
        all*.exclude group: 'org.slf4j', module: 'slf4j-jcl' // slf4j -> common-logging
        all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12' // slf4j -> log4j
    }

    // 定义仓库
    repositories {
    //  maven{url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    //  maven{url 'https://mvnrepository.com/'}
    //  mavenLocal()
        mavenCentral()
    }

    // 定义依赖:声明项目中需要哪些依赖
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        compile('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        // https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12
        testCompile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.25'

        // https://mvnrepository.com/artifact/com.alibaba/fastjson
        compile group: 'com.alibaba', name: 'fastjson', version: '1.2.62'

        testCompile group: 'junit', name: 'junit', version: '4.12'


    }
    compileJava {
        sourceCompatibility = 1.8  // can be switched to 10 for testing
        targetCompatibility = 1.8
        options.encoding = "UTF-8"
    }

    compileTestJava {
        sourceCompatibility = 1.8  // can be switched to 10 for testing
        targetCompatibility = 1.8
        options.encoding = "UTF-8"
        options.compilerArgs += "-parameters"
    }
}

configure(subprojects) {
    dependencies {

    }
}

configure(rootProject) {
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    // 配置
    //mainClassName="com.cbx.gp.platform.web.PlatformWebApplication"
    bootJar {
        mainClassName = "com.cbx.gp.platform.web.PlatformWebApplication"
    }
    springBoot {
        mainClassName = "com.cbx.gp.platform.web.PlatformWebApplication"
        buildInfo()
    }

    //
    dependencies {
        compile project( ':platform-pojo')
        compile project( ':platform-dao')
        compile project( ':platform-service-interface')
        compile project( ':platform-service-impl')
        compile project( ':platform-web')
        compile project( ':platform-security')
    }

    //jar包配置
    jar {
        manifest {
            attributes 'Implementation-Title': "cdp",
                    'Implementation-Version': "1.0",
                    'Main-Class': "com.cbx.gp.platform.web.PlatformWebApplication"
        }
    }
    //
    //    // 生成war时过滤内嵌tomcat依赖
    //    war {
    //
    //        rootSpec.exclude("tomcat-embed*.jar")
    //        rootSpec.exclude("javax.servlet-api*.jar")
    //        rootSpec.exclude("org.projectlombok:lombok")
    //    }
}


